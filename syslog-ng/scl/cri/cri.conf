@define crio-log-regexp "([a-z0-9-]+)_([a-z0-9-]+)_([a-z0-9]+)-([a-z0-9]{64}).log"

block rewrite extract-k8s-metadata (value("MESSAGE")){
  subst("`crio-log-regexp`", "$(substr $4 0 12)", value("`value`"), flags(global, store-matches), type(pcre));
  # $1 - POD name, $2 - POD namespace, $3 - container name, $4 - container id
};

block parser cri-parser(prefix('.cri.')) {
  channel {
    parser {
      csv-parser(
        columns("`prefix`time", "`prefix`stream", "`prefix`flag", "`prefix`message")
        delimiters(" ")
        flags(greedy)
      );
    };

    # possible way to filter logs from specific containers/pods
    #filter { not match("" value("`prefix`COMMAND") type(string)); };

    rewrite {
      set("$(basename \"${FILE_NAME}\")", value("`prefix`container.id"));
      extract-container-id(value("`prefix`container.id"));
      set("$1", value("`prefix`pod.name"));
      set("$2", value("`prefix`pod.namespace"));
      set("$3", value("`prefix`container.name"));
    };
  };
};

application cri[syslog] {
  parser { cri-parser(); };
};
